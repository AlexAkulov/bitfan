{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "the purpose of this api....\n\nThis should demonstrate all the possible comment annotations\nthat are available to turn go code into a fully compliant swagger 2.0 spec",
    "title": "Bitfan API.",
    "termsOfService": "there are no TOS",
    "contact": {
      "name": "Valere JEANTET",
      "url": "http://vjeantet.fr",
      "email": "valere.jeantet@gmail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "0.0.1"
  },
  "host": "127.0.0.1:5123",
  "basePath": "/api/v1",
  "paths": {
    "/docs": {
      "get": {
        "description": "This will show all avaialable plugins.",
        "produces": [
          "application/json"
        ],
        "tags": [
          "doc"
        ],
        "summary": "Lists plugins.",
        "operationId": "listDocs",
        "responses": {
          "200": {
            "description": "processor doc response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/processorDoc"
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/pipelines": {
      "get": {
        "description": "This will show all running pipelines.",
        "produces": [
          "application/json"
        ],
        "tags": [
          "pipeline"
        ],
        "summary": "Lists pipelines.",
        "operationId": "listPipelines",
        "responses": {
          "200": {
            "description": "pipelines response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Pipeline"
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "description": "This will start pipeline.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "pipeline"
        ],
        "summary": "Start a pipeline.",
        "operationId": "addPipeline",
        "parameters": [
          {
            "description": "Pipeline object that needs to be started",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Pipeline"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "pipeline response",
            "schema": {
              "$ref": "#/definitions/Pipeline"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/pipelines/{id}": {
      "get": {
        "description": "This will show a running pipeline.",
        "produces": [
          "application/json"
        ],
        "tags": [
          "pipeline"
        ],
        "summary": "Get a pipeline.",
        "operationId": "getPipeline",
        "parameters": [
          {
            "type": "integer",
            "description": "Pipeline ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "pipeline response",
            "schema": {
              "$ref": "#/definitions/Pipeline"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "description": "This will stop pipeline by ID.",
        "produces": [
          "application/json"
        ],
        "tags": [
          "pipeline"
        ],
        "summary": "Stop a running pipeline.",
        "operationId": "stopPipeline",
        "parameters": [
          {
            "type": "integer",
            "description": "Pipeline ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "pipelines response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Asset": {
      "type": "object",
      "properties": {
        "content": {
          "description": "Base64 encoded content",
          "type": "string",
          "x-go-name": "Content"
        },
        "path": {
          "description": "relative path of asset",
          "type": "string",
          "x-go-name": "Path"
        }
      },
      "x-go-package": "github.com/vjeantet/bitfan/api"
    },
    "Error": {
      "description": "A Error is ....\n\nA Error can have.....",
      "type": "object",
      "title": "Error represents an error",
      "properties": {
        "error": {
          "type": "string",
          "x-go-name": "Message"
        }
      },
      "x-go-package": "github.com/vjeantet/bitfan/api"
    },
    "Pipeline": {
      "description": "A Pipeline is ....\n\nA Pipeline can have.....",
      "type": "object",
      "title": "Pipeline represents a pipeline",
      "properties": {
        "assets": {
          "description": "Assets",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Asset"
          },
          "x-go-name": "Assets"
        },
        "config_content": {
          "type": "string",
          "x-go-name": "Content"
        },
        "config_host_location": {
          "description": "the location's host",
          "type": "string",
          "x-go-name": "ConfigHostLocation"
        },
        "config_location": {
          "description": "the location",
          "type": "string",
          "x-go-name": "ConfigLocation"
        },
        "id": {
          "description": "the id for this pipeline",
          "type": "integer",
          "format": "int64",
          "x-go-name": "ID"
        },
        "label": {
          "description": "the Label",
          "type": "string",
          "minLength": 3,
          "x-go-name": "Label"
        }
      },
      "x-go-package": "github.com/vjeantet/bitfan/api"
    },
    "processorDoc": {
      "description": "A Doc is ....\n\nA Doc can have.....",
      "type": "object",
      "title": "Doc represents a processor documentation",
      "properties": {
        "doc": {
          "type": "string",
          "x-go-name": "Doc"
        },
        "doc_short": {
          "type": "string",
          "x-go-name": "DocShort"
        },
        "kind": {
          "type": "string",
          "x-go-name": "Kind"
        },
        "name": {
          "type": "string",
          "x-go-name": "Name"
        },
        "options": {
          "type": "object",
          "properties": {
            "doc": {
              "type": "string",
              "x-go-name": "Doc"
            },
            "options": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "alias": {
                    "type": "string",
                    "x-go-name": "Alias"
                  },
                  "default_value": {
                    "type": "object",
                    "x-go-name": "DefaultValue"
                  },
                  "doc": {
                    "type": "string",
                    "x-go-name": "Doc"
                  },
                  "example": {
                    "description": "LogstashExample",
                    "type": "string",
                    "x-go-name": "ExampleLS"
                  },
                  "name": {
                    "type": "string",
                    "x-go-name": "Name"
                  },
                  "requiered": {
                    "type": "boolean",
                    "x-go-name": "Required"
                  },
                  "type": {
                    "type": "string",
                    "x-go-name": "Type"
                  }
                }
              },
              "x-go-name": "Options"
            }
          },
          "x-go-name": "Options"
        },
        "ports": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "default": {
                "type": "boolean",
                "x-go-name": "Default"
              },
              "doc": {
                "type": "string",
                "x-go-name": "Doc"
              },
              "name": {
                "type": "string",
                "x-go-name": "Name"
              },
              "number": {
                "type": "integer",
                "format": "int64",
                "x-go-name": "Number"
              }
            }
          },
          "x-go-name": "Ports"
        }
      },
      "x-go-package": "github.com/vjeantet/bitfan/api"
    }
  }
}