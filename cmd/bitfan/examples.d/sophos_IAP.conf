input{
  file {
  	path => ["/tmp/logs/*.local"]
    start_position => "beginning"
  }
}

filter{
	kv {
		source => "message"
		value_split => "="
		remove_field => [ "message" ]
	} 
	
	date {
	  match => [ "t" ,  "UNIX"]
	}

	mutate {
	  convert => {
	    "out"		=>"integer"
	    "in"		=>"integer"
	    "filesize"	=>"integer"
	    "fttime"	=>"float"
	    "scantime"	=>"float"
	    "reqtime"	=>"float"
	    "s"			=>"integer"
	    "axtime"	=>"float"
	    "adtime"	=>"float"
	    "T"			=>"integer"
	  }
	}

	mutate {
	  rename => { 
	  	"h" => "source_ip" 
	  	"u" => "user" 
	  	"s" => "http_error_code" 
	  	"t" => "unix_timestamp" 
	  	"type" => "data_type" 
	  	"ctype" => "content_type" 
	  	"meth" => "method" 
	  	"ua" => "user_agent" 
	  	"req" => "request" 
	  	"dom" => "domain" 
	  	"filetype" => "file_type" 
	  	"req" => "request" 
	  	"X" => "connection_status" 
	  	"T" => "response_time" 
	  	"act" => "action_code" 
	  	"cat" => "category_code"
	  	"rsn" => "block_reason"
	  	"sav-ev" => "antivirus_engine_version"
	  	"sav-dv" => "antivirus_signature_version"
	  	"sav-dv" => "antivirus_signature_version"
	  	"in" => "out_bytes"
	  	"out" => "in_bytes"
	  }	
	}



	if [connection_status] == "X" { 
		mutate {
			add_field => {"connection_status_reason"=>"aborted before the response completed"}
		}
	} else if [connection_status] == "+" {
		mutate {
			add_field => {"connection_status_reason"=>"may be kept alive after the response is sent"}
		}
	} else if [connection_status] == "-" {	
		mutate {
			add_field => {"connection_status_reason"=>"will be closed after the response is sent"}
		}
	}

	if [action_code] == "1" { 
		mutate {
			add_field => {"action"=>"Allowed"}
		}
	}else if [action_code] == "-1" { 
		mutate {
			add_field => {"action"=>"Blocked"}
		}
	}

}

output{
  #elasticsearch2 { hosts => ["localhost:9200"] }
  stdout{codec=>rubydebug}
}