{
  "Doc": "",
  "DocShort": "",
  "ImportPath": "/Users/sodadi/go/src/github.com/vjeantet/bitfan/processors/input-beats",
  "Name": "beatsinput",
  "Options": {
    "Doc": "",
    "Options": [
      {
        "Alias": "",
        "DefaultValue": null,
        "Doc": "",
        "ExampleLS": "",
        "Name": "Add_field",
        "Required": false,
        "Type": "hash"
      },
      {
        "Alias": "",
        "DefaultValue": null,
        "Doc": "",
        "ExampleLS": "",
        "Name": "Codec",
        "Required": false,
        "Type": "string"
      },
      {
        "Alias": "",
        "DefaultValue": null,
        "Doc": "The number of seconds before we raise a timeout,\nthis option is useful to control how much time to wait if something is blocking\nthe pipeline",
        "ExampleLS": "",
        "Name": "Congestion_threshold",
        "Required": false,
        "Type": "int"
      },
      {
        "Alias": "",
        "DefaultValue": null,
        "Doc": "The IP address to listen on",
        "ExampleLS": "",
        "Name": "Host",
        "Required": false,
        "Type": "string"
      },
      {
        "Alias": "",
        "DefaultValue": null,
        "Doc": "The port to listen on (default 5044)",
        "ExampleLS": "",
        "Name": "Port",
        "Required": false,
        "Type": "int"
      },
      {
        "Alias": "",
        "DefaultValue": null,
        "Doc": "Events are by default send in plain text,\nyou can enable encryption by using ssl to true and\nconfiguring the ssl_certificate and ssl_key options",
        "ExampleLS": "",
        "Name": "Ssl",
        "Required": false,
        "Type": "bool"
      },
      {
        "Alias": "",
        "DefaultValue": null,
        "Doc": "SSL certificate to use (path)",
        "ExampleLS": "",
        "Name": "Ssl_certificate",
        "Required": false,
        "Type": "string"
      },
      {
        "Alias": "",
        "DefaultValue": null,
        "Doc": "Validate client certificates against theses authorities\n You can defined multiples files or path, all the certificates will be read\n and added to the trust store.\n You need to configure the ssl_verify_mode to peer or force_peer to enable\n the verification.\nThis feature only support certificate directly signed by your root ca.\nIntermediate CA are currently not supported.",
        "ExampleLS": "",
        "Name": "Ssl_certificate_authorities",
        "Required": false,
        "Type": "array"
      },
      {
        "Alias": "",
        "DefaultValue": null,
        "Doc": "SSL key to use (path)",
        "ExampleLS": "",
        "Name": "Ssl_key",
        "Required": false,
        "Type": "string"
      },
      {
        "Alias": "",
        "DefaultValue": null,
        "Doc": "SSL key passphrase to use. (not yet implemented)",
        "ExampleLS": "",
        "Name": "Ssl_key_passphrase",
        "Required": false,
        "Type": "string"
      },
      {
        "Alias": "",
        "DefaultValue": null,
        "Doc": "By default the server dont do any client verification,\npeer will make the server ask the client to provide a certificate,\n  if the client provide the certificate it will be validated.\nforce_peer will make the server ask the client for their certificate,\n  if the clients doesnâ€™t provide it the connection will be closed.\nThis option need to be used with ssl_certificate_authorities and a defined list of CA.\nValue can be any of: none, peer, force_peer",
        "ExampleLS": "",
        "Name": "Ssl_verify_mode",
        "Required": false,
        "Type": "string"
      },
      {
        "Alias": "",
        "DefaultValue": null,
        "Doc": "Add any number of arbitrary tags to your event",
        "ExampleLS": "",
        "Name": "Tags",
        "Required": false,
        "Type": "array"
      },
      {
        "Alias": "",
        "DefaultValue": null,
        "Doc": "Add a type field to all events handled by this input",
        "ExampleLS": "",
        "Name": "Type",
        "Required": false,
        "Type": "string"
      }
    ]
  },
  "Ports": []
}