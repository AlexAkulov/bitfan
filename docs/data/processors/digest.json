{
  "Doc": "",
  "DocShort": "Digest events every x",
  "ImportPath": "/Users/sodadi/go/src/github.com/vjeantet/bitfan/processors/filter-digest",
  "Name": "digest",
  "Options": {
    "Doc": "",
    "Options": [
      {
        "Alias": "add_field",
        "DefaultValue": null,
        "Doc": "If this filter is successful, add any arbitrary fields to this event.",
        "ExampleLS": "",
        "Name": "AddField",
        "Required": false,
        "Type": "hash"
      },
      {
        "Alias": "add_tag",
        "DefaultValue": null,
        "Doc": "If this filter is successful, add arbitrary tags to the event. Tags can be dynamic\nand include parts of the event using the %{field} syntax.",
        "ExampleLS": "",
        "Name": "AddTag",
        "Required": false,
        "Type": "array"
      },
      {
        "Alias": "remove_field",
        "DefaultValue": null,
        "Doc": "If this filter is successful, remove arbitrary fields from this event. Example:\n` kv {\n`   remove_field =\u003e [ \"foo_%{somefield}\" ]\n` }",
        "ExampleLS": "",
        "Name": "RemoveField",
        "Required": false,
        "Type": "array"
      },
      {
        "Alias": "remove_tag",
        "DefaultValue": null,
        "Doc": "If this filter is successful, remove arbitrary tags from the event. Tags can be dynamic and include parts of the event using the %{field} syntax.\nExample:\n` kv {\n`   remove_tag =\u003e [ \"foo_%{somefield}\" ]\n` }\nIf the event has field \"somefield\" == \"hello\" this filter, on success, would remove the tag foo_hello if it is present. The second example would remove a sad, unwanted tag as well.",
        "ExampleLS": "",
        "Name": "RemoveTag",
        "Required": false,
        "Type": "array"
      },
      {
        "Alias": "key_map",
        "DefaultValue": null,
        "Doc": "Add received event fields to the digest field named with the key map_key\nWhen this setting is empty, digest will merge fields from coming events",
        "ExampleLS": "key_map =\u003e \"type\"",
        "Name": "KeyMap",
        "Required": false,
        "Type": "string"
      },
      {
        "Alias": "interval",
        "DefaultValue": null,
        "Doc": "When should Digest send a digested event ?\nUse CRON or BITFAN notation",
        "ExampleLS": "interval =\u003e \"every_10s\"",
        "Name": "Interval",
        "Required": true,
        "Type": "string"
      }
    ]
  },
  "Ports": [
    {
      "Default": true,
      "Doc": "",
      "Name": "PORT_SUCCESS",
      "Number": 0
    }
  ]
}