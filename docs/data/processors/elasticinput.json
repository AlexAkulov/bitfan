{
  "Doc": "",
  "DocShort": "",
  "ImportPath": "/Users/sodadi/go/src/github.com/vjeantet/bitfan/processors/input-elasticsearch",
  "Name": "elasticinput",
  "Options": {
    "Doc": "",
    "Options": [
      {
        "Alias": "",
        "DefaultValue": null,
        "Doc": "If this filter is successful, add any arbitrary fields to this event.",
        "ExampleLS": "",
        "Name": "Add_field",
        "Required": false,
        "Type": "hash"
      },
      {
        "Alias": "",
        "DefaultValue": null,
        "Doc": "If this filter is successful, add arbitrary tags to the event. Tags can be dynamic\nand include parts of the event using the %{field} syntax.",
        "ExampleLS": "",
        "Name": "Tags",
        "Required": false,
        "Type": "array"
      },
      {
        "Alias": "",
        "DefaultValue": null,
        "Doc": "Add a type field to all events handled by this input",
        "ExampleLS": "",
        "Name": "Type",
        "Required": false,
        "Type": "string"
      },
      {
        "Alias": "",
        "DefaultValue": null,
        "Doc": "The codec used for input data. Input codecs are a convenient method for decoding\nyour data before it enters the input, without needing a separate filter in your bitfan pipeline",
        "ExampleLS": "",
        "Name": "Codec",
        "Required": false,
        "Type": "string"
      },
      {
        "Alias": "",
        "DefaultValue": null,
        "Doc": "",
        "ExampleLS": "",
        "Name": "Hosts",
        "Required": false,
        "Type": "array"
      },
      {
        "Alias": "",
        "DefaultValue": null,
        "Doc": "",
        "ExampleLS": "",
        "Name": "Query",
        "Required": false,
        "Type": "string"
      },
      {
        "Alias": "",
        "DefaultValue": null,
        "Doc": "",
        "ExampleLS": "",
        "Name": "Size",
        "Required": false,
        "Type": "int"
      },
      {
        "Alias": "",
        "DefaultValue": null,
        "Doc": "",
        "ExampleLS": "",
        "Name": "User",
        "Required": false,
        "Type": "string"
      },
      {
        "Alias": "",
        "DefaultValue": null,
        "Doc": "",
        "ExampleLS": "",
        "Name": "Password",
        "Required": false,
        "Type": "string"
      }
    ]
  },
  "Ports": []
}