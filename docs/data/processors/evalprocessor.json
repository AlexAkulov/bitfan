{
  "Doc": "Modify or add event's field with the result of an expression (math or compare)\n\n**Operators and types supported in expression :**\n\n* Modifiers: `+` `-` `/` `*` `\u0026` `|` `^` `**` `%` `\u003e\u003e` `\u003c\u003c`\n* Comparators: `\u003e` `\u003e=` `\u003c` `\u003c=` `==` `!=` `=~` `!~`\n* Logical ops: `||` `\u0026\u0026`\n* Numeric constants, as 64-bit floating point (`12345.678`)\n* String constants (single quotes: `'foobar'`)\n* Date constants (single quotes, using any permutation of RFC3339, ISO8601, ruby date, or unix date; date parsing is automatically tried with any string constant)\n* Boolean constants: `true` `false`\n* Parenthesis to control order of evaluation `(` `)`\n* Arrays (anything separated by `,` within parenthesis: `(1, 2, 'foo')`)\n* Prefixes: `!` `-` `~`\n* Ternary conditional: `?` `:`\n* Null coalescence: `??`",
  "DocShort": "Evaluate expression",
  "ImportPath": "github.com/vjeantet/bitfan/processors/filter-eval",
  "Name": "evalprocessor",
  "Options": {
    "Doc": "",
    "Options": [
      {
        "Alias": ",squash",
        "DefaultValue": null,
        "Doc": "",
        "ExampleLS": "",
        "Name": "processors.CommonOptions",
        "PossibleValues": null,
        "Required": false,
        "Type": "processors.CommonOptions"
      },
      {
        "Alias": "expressions",
        "DefaultValue": null,
        "Doc": "list of field to set with expression's result",
        "ExampleLS": "expressions =\u003e { \"usage\" =\u003e \"[usage] * 100\" }",
        "Name": "Expressions",
        "PossibleValues": null,
        "Required": true,
        "Type": "hash"
      }
    ]
  },
  "Ports": [
    {
      "Default": true,
      "Doc": "",
      "Name": "PORT_SUCCESS",
      "Number": 0
    }
  ]
}